accessible: true
author: ''
categories: []
contact_url: ''
context: |-
    Bienvenue dans ce tutoriel de tâches Blockly.

    Ce tutoriel a pour but de vous aider à naviguer dans les informations nécessaires à la créations de tâches blockly.

    Pour la création de votre propre cours, veuillez contacter : contact@inginious.org

    Commençons ce tutoriel en expliquant ce que vos étudiants vont devoir manipuler.

    Toutes les tâches blockly qui nécessitent une carte visuelle sont définies comme dans l'image ci-dessous, qui représente une tâche basique de labyrinthe.


    * En haut de l'image, vous pouvez voir le titre et le contexte de la tâche.
    * **MAP** : Les tâches visuelles blockly nécessitent une **map**, le but de l'élève est de déplacer le personnage d'un point A à un point B, en suivant un certain chemin tout en évitant les obstacles.
    * **BOÎTE À OUTILS** : Pour réaliser la tâche, l'élève dispose d'un ensemble de blocs, présents dans la **boîte à outils**, l'élève peut glisser et déposer des blocs de la **boîte à outils** vers **l'espace de travail**. Lorsque vous configurez la tâche en tant qu'enseignant, vous décidez quels blocs sont disponibles dans la **boîte à outils**.
    * **ESPACE DE TRAVAIL** : **L'espace de travail** est l'endroit où les blocs sont placés pour résoudre la tâche. Lors de la mise en place de la tâche en tant qu'enseignant, vous décidez quels blocs sont disponibles dans **l'espace de travail**.
    * Le bouton **"Exécuter le code"** permet à l'étudiant d'exécuter les blocs présents dans **l'espace de travail**. Le personnage se déplacera en fonction des blocs. Pour exécuter le code plusieurs fois, l'élève doit appuyer à nouveau sur le bouton lorsqu'il est indiqué **"Redémarrer "** puis **"Exécuter le code "** à nouveau.
    * 2. Les trois boutons **"Blocks / Split / Text "** permettent à l'étudiant d'afficher/masquer une interface, montrant le code Python équivalent aux blocs actuellement présents dans **l'espace de travail**. Le bouton **"Split "** affiche l'interface sur la droite. Par défaut, il est réglé sur **"Blocs "**, ce qui ne montre que les blocs. L'interface montrant le code n'est pas modifiable.
    * 3. L'interface montrant l'équivalent du code Python des blocs dans l'espace de travail.
    * 4. Afin de tester sa solution, l'étudiant doit appuyer sur **Soumettre**. Le fait d'appuyer sur **"Exécuter le code"** ne fait que montrer sur la carte l'effet des blocs. Le bouton **Soumettre** déclenche les scripts d'évaluation, montrant le feedback que vous avez décidé de définir en fonction de la réponse de l'étudiant (le système d'évaluation est abordé plus en détail plus loin dans ce tutoriel).
    * 5. L'historique des soumissions en bas à gauche permet à l'étudiant de retrouver ses tentatives précédentes et de les ré-exécuter.
    * 6. Ceci montre quelques informations sur la tâche et la progression de l'étudiant.


    .. container:: text-center

        .. image:: 1-maze-fr/interface_explained.JPG

    Le bouton **"Redémarrer "**


    .. container:: text-center

        .. image:: 1-maze-fr/restart.JPG
environment_id: mcq
environment_parameters: {}
environment_type: mcq
evaluate: best
file: ''
groups: false
input_random: '0'
name: 1 - Tutoriel Maze - Structure de l'interface - Étudiant
network_grading: false
problems: {}
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
